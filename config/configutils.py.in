import os.path
def parseConf():
    ret = {}
    with open("/etc/@package_name@conf/engine.conf", "r") as configfile:
        for line in configfile.readlines():
            line = line.strip()
            toks = line.split(":")
            if len(toks) == 2:
                ret[toks[0].strip()] = toks[1].strip()
        configfile.close()
    return ret
    
def parseServices():
    srvc_ports_fname = "/etc/@package_name@conf/service_ports.lst"
    if not os.path.isfile(srvc_ports_fname):
	return {}
    def parseList(args, typeParseFunc):
	arr = []
	for arg in args:
	    try:
		arr.append(typeParseFunc(arg))
	    except ValueError:
		continue
	return arr
    ret = {}
    with open(srvc_ports_fname, "r") as configfile:
        for line in configfile.readlines():
            line = line.strip()
            toks = line.split(":")
            if len(toks) == 2:
		srvc_name = toks[0].strip()
		srvc_ports = parseList(toks[1].strip().split(','), int)
                if len(srvc_ports) > 0:
		    ret[srvc_name] = ','.join([str(port_num) for port_num in srvc_ports])
        configfile.close()
    return ret
    
if __name__ == '__main__':
	print(parseConf())
	print(parseServices())
